also refer to: field ja events



result of stub is output in column to the right of fields in the standard edit page
(eg: stub can output an "edit" button that calls javascript when clicked):
    "custom_interfaces": {
        "\\my_app\\computed_fields_php_file\\my_field_interface_button_function": [
            "field_name_1",
            "field_name_2"
        ]
    },



    "custom_insert_template": "",
    "custom_edit_template": "",
uses field names as %% templates
can auto-link css and js to template files by creating files in app resources directory with the same name and in subfolder corresponding to templates



"default_cmd_override": "insert",
"default_cmd_override": "edit",
app/index.php?page=page_id => app/index.php?page=page_id&cmd=insert
app/index.php?page=page_id&id=x => app/index.php?page=page_id&cmd=edit&id=x



    "event_handlers": {
        "on_list": "\\my_app\\stubs\\my_list_php_stub",
        "on_insert": "\\my_app\\stubs\\my_insert_php_stub",
        "on_edit": "\\my_app\\stubs\\my_edit_php_stub",
        "on_get_record_by_id": "\\my_app\\stubs\\my_get_record_by_id_php_stub",
        "on_update_record": "\\my_app\\stubs\\my_update_record_php_stub",
        "on_insert_record": "\\my_app\\stubs\\my_insert_record_php_stub",
        "on_custom_form_above": "\\my_app\\stubs\\my_custom_form_above_php_stub",
        "on_custom_form_below": "\\my_app\\stubs\\my_custom_form_below_php_stub"
    },


* general form of event handler stub with required function arguments and returned value (except for on_list):

function my_event_php_stub($form_config,$event_params,$event_name)
{
  global $settings;
  # do stuff here
  return $event_params;
}

* general form of on_list event handler:

function my_list_event()
{
  global $settings;
  $event_params["custom_list_content"]=false;
  #$event_params["content"]="";
  $records=array();
  # build $records array
  $event_params["records"]=$records;
  return $event_params;
}

$event_params elements common to all:
  $event_params["handled"]=false; # change to true to override default framework handling


following are event-specific $event_params elements, with an indication of initialised value types (not necessarily actual initialised values):


"on_list":
  $event_params["custom_list_content"]=false;
  $event_params["content"]="";
  $event_params["parent_form_config"]=array();
  $event_params["subform_config"]=array();
  $event_params["parent_record_id"]=0;

"on_insert":
  $event_params["form_config"]=array();
  $event_params["custom_content"]=false; # allows overriding of default content output
  $event_params["content"]=""; # assign custom content here
  $event_params["record_id"]=""; # empty string for insert
  $event_params["record"]=array(); # handling allows overriding of record values before default content output
  $event_params["cmd"]="insert"; # use when combining stubs for both insert and edit to distinguish between the two commands

"on_edit":
  $event_params["form_config"]=array();
  $event_params["content"]=""; # assign custom content here
  $event_params["record_id"]=""; # read this to get id passed from url
  $event_params["record"]=array(); # handling allows overriding of record values before default content output
  $event_params["hidden_fields"]=""; # assign hidden inputs when handled
  $event_params["cmd"]="edit"; # use when combining stubs for both insert and edit to distinguish between the two commands

"on_get_record_by_id":
  $event_params["form_config"]=array();
  $event_params["record_id"]=0; # initialised with id passed from url
  $event_params["config_key"]="primary";
  $event_params["record"]=false; # initialised with false, but assign array with field_name=>field_value pairs when handled

"on_update_record":
  $event_params["record_id"]=0;
  $event_params["where_items"]=array();
  $event_params["value_items"]=array();

"on_insert_record":
  $event_params["value_items"]=array();
  $event_params["new_record_id"]=0; # initialised with 0, but assign when handling

"on_custom_form_above":
  $event_params["content"]="";

"on_custom_form_below":
  $event_params["content"]="";



######################################################################################


function list_stub($event_params)
{
  global $settings;
  $form_config=$event_params["form_config"];






######################################################################################
{
    "form_version": "20190829.1",
    "form_type": "list",
    "enabled": true,
    "generate_stub": "\\my_app\\stubs\\output_entire_page",
    "page_id": "some_page"
}

function output_entire_page($form_config)
{
  return "test";
}
######################################################################################






